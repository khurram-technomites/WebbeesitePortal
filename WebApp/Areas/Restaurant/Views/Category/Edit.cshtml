@model WebApp.ViewModels.CategoryViewModel

@{
	Layout = null;
}

<div class="modal-header">
	<h5 class="modal-title">Update</h5>
	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
		<i aria-hidden="true" class="ki ki-close"></i>
	</button>
</div>
<div class="modal-body">

	<form id="frm-edit">
		@Html.AntiForgeryToken()
		<div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		@Html.HiddenFor(model => model.Id, new { id = "Id" })
		@Html.HiddenFor(model => model.Status, new { id = "Status" })
		<div class="row">
			<div class="col-md-12 col-sm-12 mb-3" style=" display: flex; justify-content: center; align-items: center;">
				<div class="image-upload @(string.IsNullOrEmpty(Model.Image) ? "empty" : "uploaded")">
					<i class="fa fa-camera"></i>
					<span>Upload Image</span>
					<input type="file" name="logo" id="logo" class="logo" accept=".png, .jpg, .jpeg" style="width:1px !important;height:1px !important" 
						   aspectratio="0.76" minCroppedWidth="250" minCroppedHeight="330"/>
					<img id="PreviewImage" src='@Model.Image' onerror="$(this).attr('src', ''); $(this).closest('.image-upload').addClass('empty').removeClass('uploaded')" />
					@*<i class="fa fa-trash" onclick="DeleteFile(this,'@Model.Image')"></i>*@

					<i class="fa fa-pen" onclick="DeleteFile(this,'@Model.Image')"></i>
				</div>
			</div>
			<div class="col-md-6 col-sm-12" hidden>
				<div class="form-group">
					<label class="control-label">Parent Category</label>
					<div class="input-group mb-2">
						@Html.DropDownList("ParentCategory", null, "Select Parent Category", htmlAttributes: new { @class = "form-control", id = "ParentCategory" })@Html.ValidationMessageFor(model => model.ParentCategoryId, "", new { @class = "text-danger" })
						<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div>
					</div>
				</div>
			</div>
			<div class="col-md-12 col-sm-12">
				<div class="form-group">
					<label class="control-label">Category Name</label>
					<div class="input-group mb-2">
						@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter category name here ...", required = "required" } })@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
						<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div>
					</div>
				</div>
			</div>
			<input type="text" class="" value="-" name="NameAr" hidden="" />

			<div class="col-md-6 col-sm-12" hidden> 
				<div class="form-group">
					<label class="control-label">Slug</label>
					<div class="input-group mb-2">
						@Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Slug name here ...", required = "required", @readonly = "readonly" } })
						@Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
						<div class="input-group-append"><span class="input-group-text"><i class="fa fa-link"></i></span></div>
					</div>
				</div>
			</div>

			<div class="col-md-12 col-sm-12">
				<div class="form-group">
					<label class="control-label">Description</label>
					<div class="input-group mb-2">
						<textarea class="form-control" name="Description" id="Description" rows="3" placeholder="Enter Description name here ..." required="required">@Model.Description</textarea>
					</div>
				</div>
			</div>
		</div>
	</form>
</div>
<div class="modal-footer">
	<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
	<button type="submit" class="btn btn-info" form="frm-edit">Save Changes</button>
</div>

<script>
	var logoPath = '';
	var _URL = window.URL || window.webkitURL;
	$(document).ready(function () {

        $('.cropper-shape').click(function () {

            $('#CropperModal').removeClass($('.cropper-shape.active').attr('data'));

            $('.cropper-shape').removeClass('active');
            $(this).addClass('active');

            $('#CropperModal').addClass($(this).attr('data'));
        })


        $('.background-color').click(function () {
            $('.background-color').removeClass('active');
            $(this).addClass('active');


            $('.cropper-view-box').css('background', $('.background-color.active').attr('data'))
        })


        $('.cropper-aspectratio').click(function () {
            $('.cropper-aspectratio').removeClass('active');
            $(this).addClass('active');


            $('#image').attr('aspectratio', $(this).attr('data'));

            cropper.setAspectRatio($(this).attr('data'))

        })

		
		$('i.fa-camera').click(function () {
			$("#logo").trigger('click');
		});

		BindImageUploader("#logo", "#image", "#CropperModal", "#PreviewImage");
		//Image Uploader End

		$("#frm-edit").submit(function () {

			$(this).closest('.modal').find('button[type=submit]').addClass('spinner spinner-sm spinner-left').attr('disabled', true);

			var data = new FormData();


			data.append("Id", $('#Id').val());
			data.append("ParentCategoryId", $('#ParentCategory').val());
			data.append("Name", $('#Name').val());
			data.append("Slug", $('#Slug').val());
			data.append("Status", $('#Status').val());
			data.append("Description", $('#Description').val());
			data.append("Image", logoPath);

			data.append("__RequestVerificationToken", $('input[name=__RequestVerificationToken]').val());
			$.ajax({
				url: "/Restaurant/Category/Edit/",
				type: "POST",
				processData: false,
				contentType: false,
				data: data,
				success: function (response) {

					if (callback) {
						callback($('#myModalContent'), element, true, response);
					}
				},
				error: function (er) {
					toastr.error(er);
				}
			});

			return false;
		});

		$("#Name").on('change', function () {
			var name = $(this);
			$("#Slug").val($(name).val().replace(/ /g, "-").replace(/'/g, "").toLocaleLowerCase());
		});
	});

</script>
