@model WebApp.ViewModels.RestaurantPrinterSettingViewModel

@{
    Layout = null;
}

<div class="modal-header">
    <h5 class="modal-title">Create</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="ki ki-close"></i>
    </button>
</div>
<div class="modal-body">

    <form asp-action="Create" asp-controller="RestaurantPrinterSetting" id="Userform">
        @Html.AntiForgeryToken()
        <div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        @*<div class="col-md-12 mb-3" style=" display: flex; justify-content: center; align-items: center;">
        <div class="image-upload empty">
        <i class="fa fa-camera"></i>
        <span>Upload Image</span>
        <input type="file" name="logo" id="logo" class="logo" accept=".png, .jpg, .jpeg" style="width:1px !important;height:1px !important" />
        <img id="PreviewImage" src=''/>
        <i class="fa fa-trash"></i>
        <i class="fa fa-pen"></i>
        </div>
        </div>*@
        <div class="col-md-6 col-sm-12">
            <div class="form-group">
                <label class="control-label">Branch</label>
                <div class="input-group mb-2">
                    <select name="BranchId" id="BranchId" class="form-control" asp-items="@(new SelectList(ViewBag.printerSetting,"Id","NameAsPerTradeLicense"))" required></select>
                    <div class="input-group-append"><span class="input-group-text"><i class="fa fa-building"></i></span></div>
                </div>
            </div>
        </div>

        <div class="col-md-6 col-sm-12">
            <div class="form-group">
                <label class="control-label">Printer Type</label>

                <div class="input-group mb-2">
                    <select asp-for="Type" class="form-control" sortOrder="Ascending">
						<option>@Enum.GetName(typeof(HelperClasses.Classes.PrinterType), HelperClasses.Classes.PrinterType.Kitchen)</option>
						<option>@Enum.GetName(typeof(HelperClasses.Classes.PrinterType), HelperClasses.Classes.PrinterType.Cashier)</option>
						<option>@Enum.GetName(typeof(HelperClasses.Classes.PrinterType), HelperClasses.Classes.PrinterType.Packaging)</option>
                    </select>
                    <div class="input-group-append"><span class="input-group-text"><i class="fa fa-print" aria-hidden="true"></i></span></div>

                </div>

            </div>
        </div>

        <div class="col-md-6 col-sm-12">
            <div class="form-group">
                <label class="control-label">Name</label>
                <div class="input-group mb-2">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter  name here ...", required = "required" } })@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    <div class="input-group-append"><span class="input-group-text"><i class="fa fa-pen"></i></span></div>
                </div>
            </div>
        </div>

     

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                <label class="control-label">IP</label>
                <div class="input-group mb-2">
                    @Html.EditorFor(model => model.IP, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter ip here ...", required = "required" } })@Html.ValidationMessageFor(model => model.IP, "", new { @class = "text-danger" })
                    <div class="input-group-append"><span class="input-group-text"><i class="fa fa-hashtag" aria-hidden="true"></i></span></div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                <label class="control-label">Port</label>
                <div class="input-group mb-2">
                    @Html.EditorFor(model => model.Port, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter port number here ...", required = "required" } })@Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
                    <div class="input-group-append"><span class="input-group-text"><i class="fas fa-plug"></i></span></div>
                </div>
            </div>
        </div>



        <div class="col-md-6 col-sm-12">
            <div class="form-group">
                <label class="control-label">Device Id</label>
                <div class="input-group mb-2">
                    @Html.EditorFor(model => model.DeviceID, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter device id here ...", required = "required" } })@Html.ValidationMessageFor(model => model.DeviceID, "", new { @class = "text-danger" })
                    <div class="input-group-append"><span class="input-group-text"><i class="fas fa-id-card"></i></span></div>
                </div>
            </div>
        </div>

        <div class="col-md-1 col-sm-12">
            <div class="form-group">
                <label class="control-label">Default</label>
                <div class="input-group mb-2">
                    <span class="d-flex flex-center  switch switch-danger">
                        <label>
                            <input type="checkbox" id="Default" name="IsDefault" value="False " onchange="GoLive(this, 10085)" checked="checked">
                            <span></span>
                        </label>
                    </span>
                </div>
            </div>
        </div>

    </div>
    </form>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    <button type="submit" class="btn btn-info" form="Userform">Submit</button>
</div>

<script>
    var _URL = window.URL || window.webkitURL;
    var logoPath;
    $(document).ready(function () {
        //
        //$('i.fa-camera').click(function () {
        //	$("#logo").trigger('click');
        //});

        //aspectratio = 1;
        //minCroppedWidth = 50;
        //minCroppedHeight = 50;

        //BindImageUploader("#logo", "#image", "#CropperModal", "#PreviewImage");

        $("#Userform").submit(function () {

            $(this).closest('.modal').find('button[type=submit]').addClass('spinner spinner-sm spinner-left').attr('disabled', true);
            var data = new FormData();
            data.append("Name", $('#Name').val());
            data.append("Type", $('#Type').val());
            data.append("IsDefault", $('#Default').is(':checked'));
            data.append("Port", $('#Port').val());
            data.append("Logo", logoPath);
            data.append("IP", $('#IP').val());
            data.append("DeviceID", $('#DeviceID').val());
            data.append("RestaurantBranchId", $('#BranchId').val());

            $.ajax({
                url: "/Restaurant/RestaurantPrinterSetting/Create/",
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {

                    if (callback) {
                        callback($('#myModalContent'), element, false, response);
                    }
                    location.reload();
                },
                error: function (er) {
                    toastr.error(er);
                }
            });
            return false;
        });
    });

</script>
