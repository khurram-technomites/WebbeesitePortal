@model WebApp.ViewModels.GarageAppointmentManagementViewModel
@using HelperClasses.Classes
@using Microsoft.AspNetCore.Authorization
@**@
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Client/Views/Shared/_Layout.cshtml";
}
<style>
    .ck-editor {
        width: 100% !important;
    }

    .ck-editor__editable {
        max-height: 400px;
    }

    .card span.text-muted {
        color: #2d2d2d66 !important;
        font-weight: 600 !important;
        font-size: 12px;
    }

    .theme-link {
        color: #ffb000 !important;
        font-weight: 900;
        cursor: pointer;
    }

        .theme-link i {
            color: #ffb000 !important;
        }



    .ck-read-only {
        user-select: none;
        background: #c4c4c44a !important;
    }

    .ck-content {
        height: 300px;
    }

        .ck-content::-webkit-scrollbar {
            width: .3em;
        }

        .ck-content::-webkit-scrollbar-track {
            /*box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.9);*/
            background-color: #eaecf461;
        }

        .ck-content::-webkit-scrollbar-thumb {
            background-color: #ebedf5;
            /*outline: 1px solid #ebedf5;*/
        }
</style>
<!--begin::Content-->
<link href="~/css/cropper.css" rel="stylesheet" />
<link href="~/Admin/css/general/ImageUploader.css" rel="stylesheet" />

<div class="content d-flex flex-column flex-column-fluid" id="kt_content">

    <!--begin::Subheader-->
    <div class="subheader py-2 py-lg-12 subheader-transparent" id="kt_subheader">
        <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-1">
                <!--begin::Heading-->
                <div class="d-flex flex-column">

                    <!--begin::Breadcrumb-->
                    <div class="d-flex align-items-center font-weight-bold my-2">
                        <!--begin::Item-->
                        <a href="/Client/Dashboard/Index" class="opacity-75 hover-opacity-100">
                            <i class="flaticon2-shelter text-white icon-1x"></i>
                        </a>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <a href="/Client/Dashboard/Index" class="text-white text-hover-white opacity-75 hover-opacity-100">&nbsp;&nbsp;Dashboard</a>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <span class="label label-dot label-sm bg-white opacity-75 mx-3"></span>
                        <a href="javascript:;" class="text-white text-hover-white opacity-75 hover-opacity-100">Appointment Management</a>
                        <!--end::Item-->
                    </div>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Heading-->
            </div>
            <!--end::Info-->
        </div>
    </div>
    <!--end::Subheader-->
    <!--begin::Entry-->
    <div class="d-flex flex-column-fluid">
        <!--begin::Container-->
        <div class="container">
            <!--begin::Dashboard-->
            <!--begin::Card-->
            <div class="row justify-content-center">
                <input asp-for="Id" hidden>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-12">



                    <div class="row">
                        <div class="col-md-4">
                            <div class="card card-custom card-stretch gutter-b card-stretch">
                                <div class="card-header border-0 py-5" style="display: flex; align-items: center;">
                                    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label font-weight-bolder text-dark">Banner</span>
                                        @*                                        <span class="text-muted mt-3">Banner for home page about us section</span>
                                        *@
                                    </h3>
                                    <div class="text-md-right">
                                        <div class="card-toolbar">
                                            <a href="javascript:;" class="opacity-75 hover-opacity-100 theme-link media">
                                                <i class="fa fa-edit"></i> Change
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body pt-0">
                                    <div class="image-upload banner @(Model != null && Model.ImagePath != null? "uploaded" : "empty")" action="/Client/AppointmentManagement/AboutUsImage">
                                        <i class="fa fa-camera"></i>
                                        <span>Upload Image</span>
                                        <input type="file" name="AboutUsBanner" id="AboutUsBanner" class="logo" accept=".png, .jpg, .jpeg" style="width:1px !important;height:1px !important" aspectratio="0.97" minCroppedWidth="400" minCroppedHeight="410" />
                                        <img id="AboutUsPreview" class="image-preview" src='@(Model != null && Model.ImagePath!=null?Model.ImagePath:"/Assets/images/no-data.png")' />
                                        @*<i class="fa fa-trash" onclick="DeleteFile(this,'@ViewBag.Restaurant.DescriptionImage')"></i>
                                        <input name="RestaurantID" id="RestaurantID" value="@ViewBag.Restaurant.Id" hidden />*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="card card-custom card-stretch gutter-b card-stretch about-us-section">
                                <div class="card-header border-0 py-5" style="display: flex; align-items: center;">
                                    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label font-weight-bolder text-dark">Description</span>
                                        @*                                        <span class="text-muted mt-3">Content for home page about us section</span>
                                        *@
                                    </h3>
                                    <div class="text-md-right">
                                        <div class="card-toolbar">
                                            <a href="javascript:;" class="opacity-75 hover-opacity-100 theme-link data">
                                                <i class="fa fa-edit"></i> Change
                                            </a>
                                            <button type="button" class="btn btn-actions btn-cancel btn-outline-secondary font-weight-bolder mr-1" style="display: none;">
                                                <i class="ki ki-close icon-sm"></i> Cancel
                                            </button>
                                            <button type="button" class="btn btn-info font-weight-bolder btn-actions" style="display: none;" onclick="SaveContent(this,'AboutUs')">
                                                <i class="ki ki-check icon-sm"></i> Save Changes
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body pt-0">
                                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter text here...", type = "text"} })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    @*<div class="col-md-8">

                    </div>*@
                </div>

                <div class="col-12">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="card card-custom card-stretch gutter-b card-stretch mission-section">
                                <div class="card-header border-0 py-0" style="display: flex; align-items: center;">
                                    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label font-weight-bolder text-dark">Our Section 01</span>
                                        @*                                    <span class="text-muted mt-3">Content for Our Mission</span>
                                        *@
                                    </h3>
                                    <div class="text-md-right">
                                        <div class="card-toolbar">
                                            <a href="javascript:;" class="opacity-75 hover-opacity-100 theme-link data">
                                                <i class="fa fa-edit"></i> Change
                                            </a>
                                            <button type="button" class="btn btn-actions btn-cancel btn-outline-secondary font-weight-bolder mr-1" style="display: none;">
                                                <i class="ki ki-close icon-sm"></i> Cancel
                                            </button>
                                            <button type="button" class="btn btn-info font-weight-bolder btn-actions" style="display: none;" onclick="SaveContent(this,'mission')">
                                                <i class="ki ki-check icon-sm"></i> Save Changes
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body pt-0">
                                    @Html.TextAreaFor(model => model.Section01, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter text here...", type = "text", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Section01, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card card-custom card-stretch gutter-b card-stretch vision-section">
                                <div class="card-header border-0 py-5" style="display: flex; align-items: center;">
                                    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label font-weight-bolder text-dark">Our Section 02</span>
                                        @*                                    <span class="text-muted mt-3">Content for Our Vision</span>
                                        *@
                                    </h3>
                                    <div class="text-md-right">
                                        <div class="card-toolbar">
                                            <a href="javascript:;" class="opacity-75 hover-opacity-100 theme-link data">
                                                <i class="fa fa-edit"></i> Change
                                            </a>
                                            <button type="button" class="btn btn-actions btn-cancel btn-outline-secondary font-weight-bolder mr-1" style="display: none;">
                                                <i class="ki ki-close icon-sm"></i> Cancel
                                            </button>
                                            <button type="button" class="btn btn-info font-weight-bolder btn-actions" style="display: none;" onclick="SaveContent(this,'vision')">
                                                <i class="ki ki-check icon-sm"></i> Save Changes
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body pt-0">
                                    @Html.TextAreaFor(model => model.Section02, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter text here...", type = "text", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Section02, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card card-custom card-stretch gutter-b card-stretch values-section">
                                <div class="card-header border-0 py-5" style="display: flex; align-items: center;">
                                    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label font-weight-bolder text-dark">Our Section 03</span>
                                        @*                                    <span class="text-muted mt-3">Content for Our Values</span>
                                        *@
                                    </h3>
                                    <div class="text-md-right">
                                        <div class="card-toolbar">
                                            <a href="javascript:;" class="opacity-75 hover-opacity-100 theme-link data">
                                                <i class="fa fa-edit"></i> Change
                                            </a>
                                            <button type="button" class="btn btn-actions btn-cancel btn-outline-secondary font-weight-bolder mr-1" style="display: none;">
                                                <i class="ki ki-close icon-sm"></i> Cancel
                                            </button>
                                            <button type="button" class="btn btn-info font-weight-bolder btn-actions" style="display: none;" onclick="SaveContent(this,'values')">
                                                <i class="ki ki-check icon-sm"></i> Save Changes
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body pt-0">
                                    @Html.TextAreaFor(model => model.Section03, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter text here...", type = "text", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Section03, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card card-custom card-stretch gutter-b card-stretch section-04">
                                <div class="card-header border-0 py-5" style="display: flex; align-items: center;">
                                    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label font-weight-bolder text-dark">Our Section 04</span>
                                        @*                                    <span class="text-muted mt-3">Content for Our Values</span>
                                        *@
                                    </h3>
                                    <div class="text-md-right">
                                        <div class="card-toolbar">
                                            <a href="javascript:;" class="opacity-75 hover-opacity-100 theme-link data">
                                                <i class="fa fa-edit"></i> Change
                                            </a>
                                            <button type="button" class="btn btn-actions btn-cancel btn-outline-secondary font-weight-bolder mr-1" style="display: none;">
                                                <i class="ki ki-close icon-sm"></i> Cancel
                                            </button>
                                            <button type="button" class="btn btn-info font-weight-bolder btn-actions" style="display: none;" onclick="SaveContent(this,'section4')">
                                                <i class="ki ki-check icon-sm"></i> Save Changes
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body pt-0">
                                    @Html.TextAreaFor(model => model.Section04, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter text here...", type = "text", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Section04, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
            <!--end::Card-->
            <!--end::Dashboard-->
        </div>
        <!--end::Container-->
    </div>
    <!--end::Entry-->
</div>
<!--end::Row-->

<div id="myModal" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content" style="min-height:100px">
            <div id='myModalContent'>
                <div class="row justify-content-center">
                    <div class="col-16">
                        <div class="kt-spinner kt-spinner--lg kt-spinner--dark kt-spinner-modal"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="CropperModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 90vw;">
        <div class="modal-content">
            <div class="modal-body">
                <div class="img-container">
                    <img id="image" src="https://avatars0.githubusercontent.com/u/3456749" style="width:80vw;height:80vh" aspectratio="NaN" minCroppedWidth="0" minCroppedHeight="0">
                </div>
            </div>
            <div class="modal-footer" style="justify-content: space-between;">
                <div class="cropper-actions">
                    <div class="aspectratio-section">
                        <h6>ASPECT RATIO</h6>
                        <div class="aspectratios">
                            <a href="javascript:;" class="cropper-aspectratio active" data="NaN"><span class="free-style"></span>FREE STYLE</a>
                            <a href="javascript:;" class="cropper-aspectratio" data="1"><span class="box"></span> SQUARE (1:1)</a>
                        </div>
                    </div>
                    <div class="shapes-section">
                        <h6>SHAPES</h6>
                        <div class="shapes">
                            <a href="javascript:;" class="cropper-shape active" data="round"><span class="round"></span> ROUND/OVAL</a>
                            <a href="javascript:;" class="cropper-shape" data="square"><span class="square"></span> SQUARE/RECTANGLE</a>
                        </div>
                    </div>
                    <div class="backgrounds-section">
                        <h6>BACKGROUNDS</h6>
                        <div class="backgrounds">
                            <a href="javascript:;" class="background-color active" data="#FFFFFF"><span style="background: #FFFFFF"></span> WHITE</a>
                            <a href="javascript:;" class="background-color" data="#000000"><span style="background: #000000"></span> BLACK</a>
                            <a href="javascript:;" class="background-color" data="#00000000"><span style="background: #00000000"></span> TRANSPARENT</a>
                        </div>
                    </div>
                </div>
                <div class="">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-info" id="crop">Submit</button>
                </div>
            </div>
        </div>
    </div>
</div>

        @section Scripts
            {
    <script src="/Admin/plugins/custom/datatables/datatables.bundle.js"></script>
    <script src="/Admin/js/general/ModalPopup.js"></script>
    <script src="~/Admin/js/client/AppointmentManagement/Update.js"></script>
    <script src="~/Admin/plugins/custom/ckeditor/ckeditor-classic.bundle.js"></script>

    <script src="~/js/cropper.js"></script>
    <script src="~/js/compressor.js"></script>
    <script src="~/Admin/js/general/ImageUploader-2.0.js"></script>
    <script src="~/Admin/js/client/AppointmentManagement/media.js"></script>
    <script>

        var DescriptionAboutUs, Description, DescriptionPrivacy, DescriptionDeliveryPolicy, DescriptionReturnPolicy;

        var Description
            , Mission
            , Vision
            , Values
            , Section04Values
            , AboutUsBanner = "@Model.ImagePath";

        var ImagePath = "";
        var UpdateLogo = "";

        $(document).ready(function () {


            $("#CEOName").attr("disabled", "disabled")

            $("#btnRestaurantlogo").click(function () {
                debugger
                $(this).closest('.modal').find('button[type=submit]').addClass('spinner spinner-sm spinner-left').attr('disabled', true);

                var data = new FormData();
                data.append("logo", UpdateLogo);
                $.ajax({
                    url: "/Client/ContentManagement/UpdateProfile/",
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {

                        if (callback) {
                            callback($('#myModalContent'), element, false, response);
                        }
                        location.reload();
                    },
                    error: function (er) {
                        toastr.error(er);
                    }
                });
                return false;
            });

            $(".ImagePath").change(function (e) {
                $(".ImagePath").attr('required', true);
                debugger
                var file, img;

                if ((file = this.files[0])) {

                    //img = new Image();
                    //img.onload = function () {

                    //    if (this.width < 400 || this.width > 400) {
                    //        Swal.fire({
                    //            icon: 'error',
                    //            title: 'Oops...',
                    //            text: 'Image dimension should be equal to 400 x 400!',

                    //        }).then(function (result) {
                    //            $(".ImagePath").attr("src", "/Assets/AppFiles/Images/default.png");
                    //            $(".cancelimage").trigger('click');
                    //        });
                    //    }
                    //    else if (this.height < 410 || this.height > 410) {
                    //        Swal.fire({
                    //            icon: 'error',
                    //            title: 'Oops...',
                    //            text: 'Image dimension should be equal to 410 x 410!',

                    //        }).then(function (result) {
                    //            $(".ImagePath").attr("src", "/Assets/AppFiles/Images/default.png");
                    //            $(".cancelimage").trigger('click');
                    //        });
                    //    }
                    //    else if (file.size > 500000) {
                    //        Swal.fire({
                    //            icon: 'error',
                    //            title: 'Oops...',
                    //            text: 'Image size must be less than 500 kb!',

                    //        }).then(function (result) {
                    //            $(".ImagePath").attr("src", "/Assets/AppFiles/Images/default.png");
                    //            $(".cancelimage").trigger('click');
                    //        });
                    //    }
                    //    else {
                    //        img.onerror = function () {
                    //            alert("not a valid file: " + file.type);
                    //        };
                    //    }
                    //};
                    //debugger
                    //img.src = _URL.createObjectURL(file);
                    ImagePath = UploadImageToDraft(file).responseText;
                }
            });
            //Image Validation End
            $(".Image").change(function (e) {
                $(".Image").attr('required', true);
                debugger
                var file, img;

                if ((file = this.files[0])) {

                    img = new Image();
                    img.onload = function () {

                        if (this.width < 400 || this.width > 400) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Image dimension should be equal to 400 x 400!',

                            }).then(function (result) {
                                $(".Image").attr("src", "/Assets/AppFiles/Images/default.png");
                                $(".cancelimage").trigger('click');
                            });
                        }
                        else if (this.height < 410 || this.height > 410) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Image dimension should be equal to 410 x 410!',

                            }).then(function (result) {
                                $(".Image").attr("src", "/Assets/AppFiles/Images/default.png");
                                $(".cancelimage").trigger('click');
                            });
                        }
                        else if (file.size > 500000) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Image size must be less than 500 kb!',

                            }).then(function (result) {
                                $(".logo").attr("src", "/Assets/AppFiles/Images/default.png");
                                $(".cancelimage").trigger('click');
                            });
                        }
                        else {
                            img.onerror = function () {
                                alert("not a valid file: " + file.type);
                            };
                        }
                    };
                    debugger
                    img.src = _URL.createObjectURL(file);
                    logoPath = UploadImageToDraft(file).responseText;

                }
            });
            $(".UpdateLogo").change(function (e) {
                $(".UpdateLogo").attr('required', true);
                debugger
                var file, img;

                if ((file = this.files[0])) {

                    img = new Image();
                    img.onload = function () {

                        if (this.width < 400 || this.width > 400) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Image dimension should be equal to 400 x 400!',

                            }).then(function (result) {
                                $(".UpdateLogo").attr("src", "/Assets/AppFiles/Images/default.png");
                                $(".cancelimage").trigger('click');
                            });
                        }
                        else if (this.height < 410 || this.height > 410) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Image dimension should be equal to 410 x 410!',

                            }).then(function (result) {
                                $(".UpdateLogo").attr("src", "/Assets/AppFiles/Images/default.png");
                                $(".cancelimage").trigger('click');
                            });
                        }
                        else if (file.size > 500000) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Image size must be less than 500 kb!',

                            }).then(function (result) {
                                $(".UpdateLogo").attr("src", "/Assets/AppFiles/Images/default.png");
                                $(".cancelimage").trigger('click');
                            });
                        }
                        else {
                            img.onerror = function () {
                                alert("not a valid file: " + file.type);
                            };
                        }
                    };
                    debugger
                    img.src = _URL.createObjectURL(file);
                    UpdateLogo = UploadImageToDraft(file).responseText;

                }
            });

            ClassicEditor.defaultConfig = {
                toolbar: {
                    items: [
                        'heading',
                        '|',
                        'bold',
                        'italic',
                        '|',
                        'bulletedList',
                        'numberedList',
                        '|',
                        'insertTable',
                        '|',
                        'undo',
                        'redo'
                    ]
                },
                image: {
                    toolbar: [
                        'imageStyle:full',
                        'imageStyle:side',
                        '|',
                        'imageTextAlternative'
                    ]
                },
                table: {
                    contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']
                },
                language: 'en'
            };


            ClassicEditor
                .create(document.querySelector('#Description'))
                .then(editor => {
                    Description = editor;
                    let toolbarElement = Description.ui.view.toolbar.element;

                    Description.on('change:isReadOnly', (evt, propertyName, isReadOnly) => {
                        if (isReadOnly) {
                            toolbarElement.style.display = 'none';
                        } else {
                            toolbarElement.style.display = 'flex';
                        }
                    });

                    Description.setData(`@Html.Raw(Model.Description)`);
                    Description.isReadOnly = true;
                })
                .catch(error => {
                    console.log(error);
                });



            ClassicEditor
                .create(document.querySelector('#Section01'))
                .then(editor => {
                    Mission = editor;
                    let toolbarElement = Mission.ui.view.toolbar.element;

                    Mission.on('change:isReadOnly', (evt, propertyName, isReadOnly) => {
                        if (isReadOnly) {
                            toolbarElement.style.display = 'none';
                        } else {
                            toolbarElement.style.display = 'flex';
                        }
                    });


                    Mission.setData(`@Html.Raw(Model.Section01)`);
                    Mission.isReadOnly = true;
                })
                .catch(error => {
                    console.log(error);
                });

            ClassicEditor
                .create(document.querySelector('#Section02'))
                .then(editor => {
                    Vision = editor;

                    const toolbarElement = Vision.ui.view.toolbar.element;

                    Vision.on('change:isReadOnly', (evt, propertyName, isReadOnly) => {
                        if (isReadOnly) {
                            toolbarElement.style.display = 'none';
                        } else {
                            toolbarElement.style.display = 'flex';
                        }
                    });


                    Vision.setData(`@Html.Raw(Model.Section02)`);
                    Vision.isReadOnly = true;
                })
                .catch(error => {
                    console.log(error);
                });



            ClassicEditor
                .create(document.querySelector('#Section03'))
                .then(editor => {
                    Values = editor;
                    let toolbarElement = Values.ui.view.toolbar.element;

                    Values.on('change:isReadOnly', (evt, propertyName, isReadOnly) => {
                        if (isReadOnly) {
                            toolbarElement.style.display = 'none';
                        } else {
                            toolbarElement.style.display = 'flex';
                        }
                    });

                    Values.setData(`@Html.Raw(Model.Section03)`);
                    Values.isReadOnly = true;
                })
                .catch(error => {
                    console.log(error);
                });

            ClassicEditor
                .create(document.querySelector('#Section04'))
                .then(editor => {
                    Section04Values = editor;
                    let toolbarElement = Section04Values.ui.view.toolbar.element;

                    Section04Values.on('change:isReadOnly', (evt, propertyName, isReadOnly) => {
                        if (isReadOnly) {
                            toolbarElement.style.display = 'none';
                        } else {
                            toolbarElement.style.display = 'flex';
                        }
                    });

                    Section04Values.setData(`@Html.Raw(Model.Section04)`);
                    Section04Values.isReadOnly = true;
                })
                .catch(error => {
                    console.log(error);
                });
        });
    </script>
}