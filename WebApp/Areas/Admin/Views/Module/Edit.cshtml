@model WebApp.ViewModels.ModuleViewModel

@{
    Layout = null;
}

<div class="modal-header border-0">
    <h5 class="modal-title">Edit</h5>
   
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="ki ki-close"></i>
    </button>
    
</div>
 @if (Model.IsSystem)
    {
        <span class="text-warning ml-2 font-size-h3">System Generated</span>
    }
<div class="modal-body">

    <form asp-action="Edit" asp-controller="Module" id="Userform">
        @Html.AntiForgeryToken()
        <div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(Model=>Model.Id)
        <div class="row">


            <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label class="control-label">ServiceName</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.ServiceName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter  name here ...", required = "required" } })
                        @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-comment-alt "></i></span></div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Price</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter  price here ...", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-dollar-sign"></i></span></div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Description</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter  Description here ...", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-folder"></i></span></div>
                    </div>
                </div>
            </div>
             <div class="col-md-3 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Default</label>
                    <span class="switch">
                        <label>
                            @Html.CheckBoxFor(Model=>Model.IsDefault,new{onchange="EnableTextbox()"})
                            <span></span>
                        </label>
                    </span>
                </div>
            </div>
             <div class="col-md-3 col-sm-12">
                <div class="form-group">
                    <label class="control-label">ManageQunatity</label>
                    <span class="switch">
                        <label>
                            @Html.CheckBoxFor(Model=>Model.ManageQunatity,new{onchange="EnableTextbox()"})
                            <span></span>
                        </label>
                    </span>
                </div>
            </div>
             <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Min</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Min, new { htmlAttributes = new { @class = "form-control",disabled="disabled", placeholder = "Enter  Min here ..." } })
                        @Html.ValidationMessageFor(model => model.Min, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-pen"></i></span></div>
                    </div>
                </div>
            </div>
             <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Max</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Max, new { htmlAttributes = new { @class = "form-control",disabled="disabled", placeholder = "Enter  Max here ..." } })
                        @Html.ValidationMessageFor(model => model.Max, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-pen"></i></span></div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    <button type="submit" class="btn btn-info" form="Userform">Submit</button>
</div>

<script>
    var isysystem = '@Model.IsSystem'
    var _URL = window.URL || window.webkitURL;
    var logoPath;
     function EnableTextbox() {
         debugger
        var Min = document.getElementById("Min");
        var Max = document.getElementById("Max");

        Min.disabled = $("#ManageQunatity").prop('checked') ? false : true;
        Min.required = $("#ManageQunatity").prop('checked') ? true : false;
        Max.disabled = $("#ManageQunatity").prop('checked') ? false : true;
        Max.required = $("#ManageQunatity").prop('checked') ? true : false;
         if ($("#IsDefault").prop('checked') == true) {
             Max.disabled = true;
             Max.required = false
         }
    }
    $(document).ready(function () {
        EnableTextbox()
        if(isysystem == "True"){
            document.getElementById("ServiceName").disabled = true;
            document.getElementById("ManageQunatity").disabled = true;
        }
        $("#Userform").submit(function () {

            $(this).closest('.modal').find('button[type=submit]').addClass('spinner spinner-sm spinner-left').attr('disabled', true);
            
            var data = new FormData();
            data.append("ServiceName", $('#ServiceName').val());
            data.append("Id", $('#Id').val());
            data.append("Price", $('#Price').val());
            data.append("Description", $('#Description').val());
            data.append("ManageQunatity", $("#ManageQunatity").prop('checked') ? true : false);
            data.append("Min", $('#Min').val());
           data.append("Max",  $("#IsDefault").prop('checked') ? $('#Min').val() :$('#Max').val());
            data.append("IsDefault", $("#IsDefault").prop('checked') ? true : false);
            data.append("IsActive", '@Model.IsActive');
            data.append("IsSystem", '@Model.IsSystem');
            $.ajax({
                url: "/Admin/Module/Edit/",
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {

                    if (callback) {
                        callback($('#myModalContent'), element, true, response);
                    }
                },
                error: function (er) {
                    toastr.error(er);
                }
            });
            return false;
        });
    });

</script>
