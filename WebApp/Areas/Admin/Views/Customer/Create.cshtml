@model WebApp.ViewModels.CustomerViewModel

@{
    Layout = null;
}


<div class="modal-header">
    <h5 class="modal-title">Create</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="ki ki-close"></i>
    </button>
</div>
<div class="modal-body">

    <form asp-action="Create" asp-controller="Customer" id="Userform">
        @Html.AntiForgeryToken()
        <div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row">

            <div class="col-md-12 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Customer Name</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter first name here ...", required = "required" } })@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-user"></i></span></div>
                    </div>
                </div>
            </div>


            <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Email</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email here ...",required = "required" } })@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-envelope"></i></span></div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Mobile No</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter phone number here ...",  required = "required" } })@Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-phone"></i></span></div>
                    </div>
                </div>
            </div>

        </div>

    </form>
</div>


<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    <button type="submit" class="btn btn-info" form="Userform">Submit</button>
</div>

<script>
    var _URL = window.URL || window.webkitURL;
    $(document).ready(function () {
        $("#Userform").submit(function () {

            $(this).closest('.modal').find('button[type=submit]').addClass('spinner spinner-sm spinner-left').attr('disabled', true);

            var data = new FormData();

            data.append("Email", $('#Email').val());
            data.append("Name", $('#Name').val());
            data.append("Contact", $('#Contact').val());
            //data.append("Password", $('#Password').val());
            data.append("__RequestVerificationToken", $('input[name=__RequestVerificationToken]').val());

            $.ajax({
                url: "/Admin/Customer/Create/",
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {

                    if (callback) {
                        callback($('#myModalContent'), element, false, response);
                    }
                    location.reload();
                            },
                error: function (er) {
                    toastr.error(er);
                }
            });
            return false;
        });
    });
</script>